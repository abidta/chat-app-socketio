<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chit chat</title>
  <link rel="stylesheet" href="/stylesheets/style.css">
  <style>
    /*  #messages>li:nth-child(odd) {
      background: #fd0000;
    }*/
  </style>
</head>
<body>
  <p id="isUser">{{user}}</p>
  <section id="msg-sec">
    <div class="container">
      <ul id="messages"></ul>
    </div>
  </section>
  <button id="logout-btn" class="logout">Logout</button>
  <form id="name-form" class="center" action="">
    <input id="name" minlength="3" maxlength="10" name="name" placeholder="Enter your name" class="input-field"
      type="text" autocomplete="on">
    <label for="name" class="input-label">Enter your name</label>
    <p id="error-name"></p>
    <button type="submit" class="submit-btn">Submit</button>
  </form>
  <section>
    <div class="container">
      <form id="form" action="">
        <input id="input" placeholder="Type your message..." autocomplete="off" /><button>Send</button>
      </form>
    </div>
  </section>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    var socket = io();
    var messages = document.getElementById('messages');
    var form = document.getElementById('form');
    var input = document.getElementById('input');
    var user = document.getElementById('name')
    var randomColor = Math.floor(Math.random() * 16777215).toString(16);
    var logoutBtn = document.getElementById('logout-btn')

    fetch("/get-session").then((res) => res.json()).then((isSession) => {
      if (isSession) {
        console.log(isSession, "session")
        form.style.display = 'flex'
        document.getElementById('name-form').style.display = 'none'
        logoutBtn.style.display = 'flex'
      }
    }).catch((err) => {
      console.log(err)
    })
    document.getElementById('name-form').addEventListener('submit', (e) => {
      e.preventDefault()
      console.log(user)
      console.log(socket.id)
      if (user.value) {
        socket.emit('login', user.value, (err) => {
          if (!err) {
            console.log('cb success')
            form.style.display = 'flex'
            document.getElementById('name-form').style.display = 'none'
            logoutBtn.style.display = 'flex'
          }
          else {
            console.log(err)
            document.getElementById('error-name').innerHTML = err
          }
        })
        user.value = ''
      }
    })
    logoutBtn.addEventListener('click', async (e) => {
      await fetch("/logout", {
        method: "POST",
        redirect: "follow",
        headers: { "Content-Type": "application/json" }
      }).then((res) => {
        if (res.redirected) {
          location.href = "/"
        }
      })
    })

    form.addEventListener('submit', function (e) {
      e.preventDefault();
      if (input.value) {
        socket.emit('chat message', input.value, randomColor);
        input.value = '';
      }
    });
    socket.on('chat message', function ({ name, msg, color }) {
      var item = document.createElement('li');
      var msgElemnt = document.createElement('span')
      item.textContent = name;
      msgElemnt.textContent = ' : ' + msg
      msgElemnt.style.color = 'black'
      item.style.color = '#' + color
      messages.appendChild(item);
      item.appendChild(msgElemnt)
      window.scrollTo(0, document.body.scrollHeight);
    });
  </script>
</body>

</html>